version: '3'
services:
  sonarr:
    image: "linuxserver/sonarr"
    container_name: sonarr
    hostname: sonarr
    ports:
     - "8989:8989"
    environment:
     - TZ='America/Chicago'
     - PUID=${UID}
     - GUID=${GID}
    volumes:
    #- /volume2/docker/localtime:/etc/localtime:ro
     - /etc/localtime:/etc/localtime:ro
     - ${APP_ROOT}/sonarr/config:/config
     - downloads:/downloads
     - tvshows:/tv
    depends_on:
     - jackett
    restart: unless-stopped
    logging:
      driver: 'json-file'
    networks:
      - front-end

  radarr:
    image: "linuxserver/radarr"
    container_name: radarr
    hostname: radarr
    ports:
     - "7878:7878"
    environment:
     - TZ='America/Chicago'
     - PUID=${UID}
     - GUID=${GID}
    volumes:
     - /etc/localtime:/etc/localtime:ro
     - ${APP_ROOT}/radarr/config:/config
     - downloads:/downloads
     - movies:/movies
    depends_on:
     - jackett
    restart: unless-stopped
    logging:
      driver: 'json-file'
    networks:
      - front-end

  bazarr:
    image: "linuxserver/bazarr"
    container_name: bazarr
    hostname: bazarr
    ports:
     - "6767:6767"
    environment:
     - TZ='America/Chicago'
     - PUID=${UID}
     - GUID=${GID}
    volumes:
     - /etc/localtime:/etc/localtime:ro
     - ${APP_ROOT}/bazarr/config:/config
     - movies:/movies
    depends_on:
     - radarr
    logging:
      driver: 'json-file'
    networks:
      - front-end

  jackett:
    image: "linuxserver/jackett"
    container_name: jackett
    hostname: jackett
    ports:
     - "9117:9117"
    environment:
     - TZ='America/Chicago'
     - PUID=${UID}
     - GUID=${GID}
    volumes:
     - /etc/localtime:/etc/localtime:ro
     - ${APP_ROOT}/jackett/config:/config
    depends_on:
     - transmission
    restart: unless-stopped
    logging:
      driver: 'json-file'
    networks:
      - front-end

  transmission:
    image: "haugene/transmission-openvpn"
    container_name: transmission
    hostname: transmission
    privileged: true
    dns: 8.8.8.8
    ports:
     - "9091:9091"
     - "51413:51413"
     - "51413:51413/udp"
    environment:
     - TZ='America/Chicago'
     - PUID=${UID}
     - GUID=${GID}
     - OPENVPN_PROVIDER=NORDVPN 
     - OPENVPN_USERNAME=${NORDUSER}
     - OPENVPN_PASSWORD=${NORDPASS}
     - WEBPROXY_ENABLED=false 
     - TRANSMISSION_HOME=/data/transmission-home 
     - TRANSMISSION_DOWNLOAD_DIR=/downloads/completed
     - TRANSMISSION_IDLE_SEEDING_LIMIT=30 
     - TRANSMISSION_IDLE_SEEDING_LIMIT_ENABLED=true 
     - TRANSMISSION_INCOMPLETE_DIR=/downloads/incomplete
     - TRANSMISSION_INCOMPLETE_DIR_ENABLED=true 
     - TRANSMISSION_QUEUE_STALLED_ENABLED=true 
     - TRANSMISSION_QUEUE_STALLED_MINUTES=30 
     - TRANSMISSION_RATIO_LIMIT=2 
     - TRANSMISSION_RATIO_LIMIT_ENABLED=true 
     - TRANSMISSION_SPEED_LIMIT_UP=150 
     - TRANSMISSION_SPEED_LIMIT_UP_ENABLED=true 
     - TRANSMISSION_TRASH_ORIGINAL_TORRENT_FILES=true 
     - TRANSMISSION_WATCH_DIR=/downloads/watch 
     - TRANSMISSION_WATCH_DIR_ENABLED=true 
    logging:
      driver: "json-file"
      options:
        max-size: "10000k"
        max-file: "3"
    volumes:
     - /etc/localtime:/etc/localtime:ro
     - ${APP_ROOT}/transmission/config:/config
     - downloads:/downloads
    restart: unless-stopped
    logging:
      driver: 'json-file'
    networks:
      - front-end

  trans-cleaner:
    build: 
      context: ./trans-cleaner
      dockerfile: Dockerfile
    container_name: trans-cleaner
    hostname: trans-cleaner
    ports:
     - "8888:8888"
    volumes:
     - /etc/localtime:/etc/localtime:ro
     - /etc/hosts:/etc/hosts
    restart: unless-stopped
    logging:
      driver: 'json-file'
    depends_on:
     - transmission
    networks:
      - front-end

  plex:
    image: "linuxserver/plex"
    container_name: plex
    hostname: plex
    ports:
     - "32400:32400"
     - "32400:32400/udp"
     - "32469:32469"
     - "32469:32469/udp"
    #- "5353:5353/udp"
     - "1900:1900/udp"
    environment:
     - TZ='America/Chicago'
     - PUID=${UID}
     - GUID=${GID}
    volumes:
     - /etc/localtime:/etc/localtime:ro
     - ${APP_ROOT}/plex/config:/config
     - tvshows:/data/tvshows
     - movies:/data/movies
     - transcode:/transcode
    depends_on:
     - radarr
    restart: unless-stopped
    logging:
      driver: 'json-file'
    networks:
      - front-end

  muximux:
    image: "linuxserver/muximux"
    container_name: muximux
    hostname: muximux
    ports:
     - "8080:80"
    environment:
     - TZ='America/Chicago'
     - PUID=${UID}
     - GUID=${GID}
    volumes:
     - /etc/localtime:/etc/localtime:ro
     - ${APP_ROOT}/muximux/config:/config
    depends_on:
     - radarr
    restart: unless-stopped
    logging:
      driver: 'json-file'
    networks:
      - front-end

networks:
    front-end:

volumes:
    downloads:
      driver: local
      driver_opts:
        type: none
        o: bind
        device: "${VOLUME_ROOT}/downloads"
        #device: "${VOLUME_ROOT}/data-directories/downloads"
    movies:
      driver: local
      driver_opts:
        type: none
        o: bind
        device: "${VOLUME_ROOT}/Movies"
        #device: "${VOLUME_ROOT}/data-directories/movies"
    tvshows:
      driver: local
      driver_opts:
        type: none
        o: bind
        device: "${VOLUME_ROOT}/TV"
        #device: "${VOLUME_ROOT}/data-directories/tvshows"
    videos:
      driver: local
      driver_opts:
        type: none
        o: bind
        device: "${VOLUME_ROOT}/Videos"
    transcode:
      driver: local
      driver_opts:
        type: none
        o: bind
        device: "${VOLUME_ROOT}/downloads/transcode"
        #device: "${VOLUME_ROOT}/data-directories/transcode"

# /volume1/NasMedia/downloads
# /volume1/NasMedia/Movies
# /volume1/NasMedia/TV
# /volume1/NasMedia/Videos
# /volume1/NasMedia/Music
